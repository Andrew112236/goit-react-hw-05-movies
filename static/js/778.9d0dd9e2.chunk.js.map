{"version":3,"file":"static/js/778.9d0dd9e2.chunk.js","mappings":"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","sources":["API_links/Api.js","Pages/Home/Home.styled.js","webpack://react-homework-template/./src/components/SearchBar/SearchBar.module.css?35a0","components/SearchBar/SearchBar.jsx","Pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\nconst API_KEY = '6761a75cfe3ce8a6cf2b591c7da9567e';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\n// API function for searching movies\n\nexport async function searchMovies(query) {\n  try {\n    const API_URL = `search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`;\n    const response = await axios.get(API_URL);\n    return response.data;\n  } catch (error) {\n    console.error('There is a error in search movies of', error);\n    throw error;\n  }\n}\n\n// API function for movie details\n\nexport async function getMovieDetails(id) {\n  try {\n    const API_URL = `movie/${id}?api_key=${API_KEY}&language=en-US`;\n    const response = await axios.get(API_URL);\n    return response.data;\n  } catch (error) {\n    console.error('There is a error in search movies details of', error);\n    throw error;\n  }\n}\n\n// API function for movie trendings\n\nexport async function getTrending() {\n  try {\n    const API_URL = `trending/movie/day?api_key=${API_KEY}`;\n    const response = await axios.get(API_URL);\n    return response.data;\n  } catch (error) {\n    console.error('There is a error in searching trendings of', error);\n    throw error;\n  }\n}\n\n// API function for movie reviews\n\nexport async function getReviews(id) {\n  try {\n    const API_URL = `movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`;\n    const response = await axios.get(API_URL);\n    return response.data;\n  } catch (error) {\n    console.error('There is a error in searching reviews of', error);\n    throw error;\n  }\n}\n\n// API function for movie credits\n\nexport async function getMovieCredits(id) {\n  try {\n    const API_URL = `movie/${id}/credits?api_key=${API_KEY}&language=en-US`;\n    const response = await axios.get(API_URL);\n    return response.data;\n  } catch (error) {\n    console.error('There is a error in searching reviews of', error);\n    throw error;\n  }\n}\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const MovieLink = styled(Link)`\n  text-decoration: none;\n  padding: 5px 8px;\n\n  &:visited {\n    color: blue;\n  }\n\n  &:hover {\n    border-radius: 15px;\n    box-shadow: 1px 2px 4px 3px rgba(231, 233, 255, 5);\n    background-color: rgb(31, 133, 255);\n    color: white;\n    font-weight: bold;\n  }\n`;\nexport const MovieList = styled.ul`\n  padding: 20px 0 20px;\n  margin: 0;\n  display: flex;\n  flex-direction: column;\n  row-gap: 15px;\n  list-style-type: lower-numerical;\n  list-style-color:\n  text-decoration: none;\n`;\n\nexport const Title = styled.h2`\n  margin-top: 20px;\n  margin-bottom: 0;\n`;\n","// extracted by mini-css-extract-plugin\nexport default {\"Searchbar\":\"SearchBar_Searchbar__qe5Sc\",\"form\":\"SearchBar_form__gW7Gj\",\"button\":\"SearchBar_button__T7RTc\",\"button_label\":\"SearchBar_button_label__PbnEv\",\"input\":\"SearchBar_input__bIy50\"};","import React from 'react';\nimport styles from '../SearchBar/SearchBar.module.css';\n\nfunction Searchbar({ onSubmit }) {\n  const [query, setQuery] = React.useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit(query);\n  };\n\n  const handleInputChange = e => {\n    setQuery(e.target.value);\n  };\n\n  return (\n    <header className={styles.Searchbar}>\n      <form className={styles.form} onSubmit={handleSubmit}>\n        <input\n          className={styles.input}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search Movies\"\n          value={query}\n          onChange={handleInputChange}\n        />\n        <button type=\"submit\" className={styles.button}>\n          <span className={styles.button_label}>Search</span>\n        </button>\n      </form>\n    </header>\n  );\n}\n\nexport default Searchbar;\n","import React, { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { searchMovies } from '../../API_links/Api';\nimport Loader from '../../components/Loader/Loader';\nimport { MovieList, MovieLink } from '../../Pages/Home/Home.styled';\nimport SearchBar from '../../components/SearchBar/SearchBar';\n\nfunction Movies() {\n  const [searchParams] = useSearchParams();\n  const movieName = searchParams.get('movieName') ?? '';\n  const [moviesList, setMoviesList] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    if (movieName === '') {\n      return;\n    }\n    setMoviesList([]);\n    setIsLoading(true);\n\n    searchMovies(movieName)\n      .then(data => {\n        if (!data.results.length) {\n          setIsLoading(false);\n          setError(true);\n          console.log(\n            'There are no movies with this request. Please try again'\n          );\n        } else {\n          setError(false);\n          setMoviesList(data.results);\n          setIsLoading(false);\n        }\n      })\n      .catch(error => {\n        setIsLoading(false);\n        setError(true);\n        console.error('An error occurred while fetching movies:', error);\n      });\n  }, [movieName]);\n\n  return (\n    <div>\n      <SearchBar />\n      {isLoading ? (\n        <Loader />\n      ) : error ? (\n        <p>There was an error loading the movies.</p>\n      ) : (\n        <MovieList>\n          {moviesList.map(movie => (\n            <MovieLink key={movie.id} to={`/movie/${movie.id}`}>\n              {movie.title}\n            </MovieLink>\n          ))}\n        </MovieList>\n      )}\n    </div>\n  );\n}\n\nexport default Movies;\n"],"names":["API_KEY","searchMovies","query","API_URL","axios","response","data","console","error","getMovieDetails","id","getTrending","getReviews","MovieLink","styled","Link","MovieList","Title","onSubmit","React","setQuery","className","styles","e","preventDefault","type","autoComplete","autoFocus","placeholder","value","onChange","target","useSearchParams","movieName","get","useState","moviesList","setMoviesList","isLoading","setIsLoading","setError","useEffect","then","results","length","log","catch","SearchBar","Loader","map","movie","to","title"],"sourceRoot":""}