{"version":3,"file":"static/js/387.72e415ec.chunk.js","mappings":"mTACMA,EAAU,mCAMT,SAAeC,EAAtB,kC,aAAO,O,oBAAA,WAA4BC,GAA5B,yFAEGC,EAFH,+BAEqCH,EAFrC,iCAEqEE,EAFrE,wCAGoBE,EAAAA,EAAAA,IAAUD,GAH9B,cAGGE,EAHH,yBAIIA,EAASC,MAJb,sCAMHC,QAAQC,MAAM,uCAAd,MANG,qFAaA,SAAeC,EAAtB,kC,aAAO,O,oBAAA,WAA+BC,GAA/B,yFAEGP,EAFH,gBAEsBO,EAFtB,oBAE8CV,EAF9C,4BAGoBI,EAAAA,EAAAA,IAAUD,GAH9B,cAGGE,EAHH,yBAIIA,EAASC,MAJb,sCAMHC,QAAQC,MAAM,+CAAd,MANG,qFAaA,SAAeG,EAAtB,kC,aAAO,O,oBAAA,WAA+BD,GAA/B,yFAEGP,EAFH,gBAEsBO,EAFtB,4BAEsDV,EAFtD,4BAGoBI,EAAAA,EAAAA,IAAUD,GAH9B,cAGGE,EAHH,yBAIIA,EAASC,MAJb,sCAMHC,QAAQC,MAAM,2CAAd,MANG,qFAaA,SAAeI,IAAtB,+B,aAAO,O,oBAAA,sGAEGT,EAFH,qCAE2CH,GAF3C,SAGoBI,EAAAA,EAAAA,IAAUD,GAH9B,cAGGE,EAHH,yBAIIA,EAASC,MAJb,sCAMHC,QAAQC,MAAM,6CAAd,MANG,qFAaA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA0BH,GAA1B,yFAEGP,EAFH,gBAEsBO,EAFtB,4BAEsDV,EAFtD,mCAGoBI,EAAAA,EAAAA,IAAUD,GAH9B,cAGGE,EAHH,yBAIIA,EAASC,MAJb,sCAMHC,QAAQC,MAAM,2CAAd,MANG,qFAxDPJ,EAAAA,EAAAA,SAAAA,QAAyB,+B,6ICDZU,EAAgBC,EAAAA,GAAAA,IAAH,oFAKbC,EAAWD,EAAAA,GAAAA,GAAH,6CAWRE,GARWF,EAAAA,GAAAA,GAAH,0HAKDA,EAAAA,GAAAA,GAAH,0CAGQA,EAAAA,GAAAA,EAAH,uC,mBCuBtB,MAnCA,WACE,IAAQL,GAAiBQ,EAAAA,EAAAA,MAAjBR,aACR,GAAgCS,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KAQA,OANAC,EAAAA,EAAAA,YAAU,YACRX,EAAAA,EAAAA,IAAgBD,GAAca,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACpCH,EAAYG,EACb,GACF,GAAE,CAACd,KAGF,SAACI,EAAD,WACW,OAARM,QAAQ,IAARA,OAAA,EAAAA,EAAUK,QAAS,EAAnB,OACCL,QADD,IACCA,OADD,EACCA,EAAUM,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,UAAWC,EAAhC,EAAgCA,KAAhC,OACZ,UAACd,EAAD,WACGY,GACC,gBACEG,IAAG,yCAAoCH,GACvCI,IAAKF,KAGP,SAAC,MAAD,CAAoBG,KAAM,OAG5B,SAAChB,EAAD,UAAYa,KACZ,UAACb,EAAD,WAAW,eAAaY,EAAUK,OAAO,EAAG,QAX/BP,EADH,KAgBd,uBAAG,uCAIV,C","sources":["API_links/Api.js","components/Cast/Cast.styled.js","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\nconst API_KEY = '6761a75cfe3ce8a6cf2b591c7da9567e';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\n// API function for searching movies\n\nexport async function searchMovies(query) {\n  try {\n    const API_URL = `search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`;\n    const response = await axios.get(API_URL);\n    return response.data;\n  } catch (error) {\n    console.error('There is a error in search movies of', error);\n    throw error;\n  }\n}\n\n// API function for movie details\n\nexport async function getMovieDetails(movieIdParam) {\n  try {\n    const API_URL = `movie/${movieIdParam}?api_key=${API_KEY}&language=en-US`;\n    const response = await axios.get(API_URL);\n    return response.data;\n  } catch (error) {\n    console.error('There is a error in search movies details of', error);\n    throw error;\n  }\n}\n\n// API function for movie credits\n\nexport async function getMovieCredits(movieIdParam) {\n  try {\n    const API_URL = `movie/${movieIdParam}/credits?api_key=${API_KEY}&language=en-US`;\n    const response = await axios.get(API_URL);\n    return response.data;\n  } catch (error) {\n    console.error('There is a error in searching credits of', error);\n    throw error;\n  }\n}\n\n// API function for movie trendings\n\nexport async function getTrending() {\n  try {\n    const API_URL = `trending/movie/day?api_key=${API_KEY}`;\n    const response = await axios.get(API_URL);\n    return response.data;\n  } catch (error) {\n    console.error('There is a error in searching trendings of', error);\n    throw error;\n  }\n}\n\n// API function for movie reviews\n\nexport async function getReviews(movieIdParam) {\n  try {\n    const API_URL = `movie/${movieIdParam}/reviews?api_key=${API_KEY}&language=en-US&page=1`;\n    const response = await axios.get(API_URL);\n    return response.data;\n  } catch (error) {\n    console.error('There is a error in searching reviews of', error);\n    throw error;\n  }\n}\n","import styled from 'styled-components';\n\nexport const CastContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  max-width: 1200px;\n`;\nexport const CastList = styled.ul`\n  list-style: none;\n`;\nexport const CastItem = styled.li`\n  margin: 10px 0 16px;\n  padding: 2px 8px;\n  //box-shadow: 1px 2px 4px 3px rgba(0, 0, 0, 0.5);\n`;\nexport const Name = styled.h3`\n  margin: 8px 0;\n`;\nexport const Character = styled.p`\n  margin: 0;\n`;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCredits } from '../../API_links/Api';\nimport { CastContainer, CastList, Character } from './Cast.styled';\nimport { AiFillAmazonSquare } from 'react-icons/ai';\n\nfunction Cast() {\n  const { movieIdParam } = useParams();\n  const [castData, setCastData] = useState('');\n\n  useEffect(() => {\n    getMovieCredits(movieIdParam).then(({ cast }) => {\n      setCastData(cast);\n    });\n  }, [movieIdParam]);\n\n  return (\n    <CastContainer>\n      {castData?.length > 0 ? (\n        castData?.map(({ id, profile_path, character, name }) => (\n          <CastList key={id}>\n            {profile_path ? (\n              <img\n                src={`https://image.tmdb.org/t/p/w200${profile_path}`}\n                alt={name}\n              />\n            ) : (\n              <AiFillAmazonSquare size={200} />\n            )}\n\n            <Character>{name}</Character>\n            <Character>Character : {character.substr(0, 9)}</Character>\n          </CastList>\n        ))\n      ) : (\n        <p> Sorry, there are no information!</p>\n      )}\n    </CastContainer>\n  );\n}\n\nexport default Cast;\n"],"names":["API_KEY","searchMovies","query","API_URL","axios","response","data","console","error","getMovieDetails","movieIdParam","getMovieCredits","getTrending","getReviews","CastContainer","styled","CastList","Character","useParams","useState","castData","setCastData","useEffect","then","cast","length","map","id","profile_path","character","name","src","alt","size","substr"],"sourceRoot":""}