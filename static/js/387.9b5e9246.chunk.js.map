{"version":3,"file":"static/js/387.9b5e9246.chunk.js","mappings":"+SACMA,EAAU,mCAMT,SAAeC,EAAtB,kC,aAAO,O,oBAAA,WAA4BC,GAA5B,yFAEGC,EAFH,+BAEqCH,EAFrC,iCAEqEE,EAFrE,wCAGoBE,EAAAA,EAAAA,IAAUD,GAH9B,cAGGE,EAHH,yBAIIA,EAASC,MAJb,sCAMHC,QAAQC,MAAM,uCAAd,MANG,qFAaA,SAAeC,EAAtB,kC,aAAO,O,oBAAA,WAA+BC,GAA/B,yFAEGP,EAFH,gBAEsBO,EAFtB,oBAEoCV,EAFpC,4BAGoBI,EAAAA,EAAAA,IAAUD,GAH9B,cAGGE,EAHH,yBAIIA,EAASC,MAJb,sCAMHC,QAAQC,MAAM,+CAAd,MANG,qFAaA,SAAeG,IAAtB,+B,aAAO,O,oBAAA,sGAEGR,EAFH,qCAE2CH,GAF3C,SAGoBI,EAAAA,EAAAA,IAAUD,GAH9B,cAGGE,EAHH,yBAIIA,EAASC,MAJb,sCAMHC,QAAQC,MAAM,6CAAd,MANG,qFAaA,SAAeI,EAAtB,kC,aAAO,O,oBAAA,WAA0BF,GAA1B,yFAEGP,EAFH,gBAEsBO,EAFtB,4BAE4CV,EAF5C,mCAGoBI,EAAAA,EAAAA,IAAUD,GAH9B,cAGGE,EAHH,yBAIIA,EAASC,MAJb,sCAMHC,QAAQC,MAAM,2CAAd,MANG,qFAaA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA+BH,GAA/B,yFAEGP,EAFH,gBAEsBO,EAFtB,4BAE4CV,EAF5C,4BAGoBI,EAAAA,EAAAA,IAAUD,GAH9B,cAGGE,EAHH,yBAIIA,EAASC,MAJb,sCAMHC,QAAQC,MAAM,2CAAd,MANG,qFAxDPJ,EAAAA,EAAAA,SAAAA,QAAyB,+B,qICDZU,EAAWC,EAAAA,GAAAA,GAAH,6CAGRC,EAAWD,EAAAA,GAAAA,GAAH,0HAKRE,EAAOF,EAAAA,GAAAA,GAAH,0CAGJG,EAAYH,EAAAA,GAAAA,EAAH,sC,SCwBtB,EAhCa,WACX,OAA8BI,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAiBC,EAAAA,EAAAA,MAAjBD,aAKR,OAJAE,EAAAA,EAAAA,YAAU,YACRX,EAAAA,EAAAA,IAAgBS,GAAcG,MAAK,SAAAnB,GAAI,OAAIe,EAAWf,EAAKc,QAApB,GACxC,GAAE,CAACE,KAGF,SAACR,EAAD,UACGM,EAAQM,OAAS,EACdN,EAAQO,KAAI,gBAAGjB,EAAH,EAAGA,GAAIkB,EAAP,EAAOA,KAAMC,EAAb,EAAaA,aAAcC,EAA3B,EAA2BA,UAA3B,OACV,UAACd,EAAD,YACE,gBACEe,IACEF,EAAY,yCAC0BA,GAD1B,+CAIdG,IAAI,QACJC,QAAQ,OACRC,MAAO,IACPC,OAAQ,OAEV,SAAClB,EAAD,UAAOW,KACP,UAACV,EAAD,WAAW,eAAaY,OAbXpB,EADL,IAiBZ,kCAGT,C","sources":["API_links/Api.js","components/Cast/Cast.styled.js","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\nconst API_KEY = '6761a75cfe3ce8a6cf2b591c7da9567e';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\n// API function for searching movies\n\nexport async function searchMovies(query) {\n  try {\n    const API_URL = `search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`;\n    const response = await axios.get(API_URL);\n    return response.data;\n  } catch (error) {\n    console.error('There is a error in search movies of', error);\n    throw error;\n  }\n}\n\n// API function for movie details\n\nexport async function getMovieDetails(id) {\n  try {\n    const API_URL = `movie/${id}?api_key=${API_KEY}&language=en-US`;\n    const response = await axios.get(API_URL);\n    return response.data;\n  } catch (error) {\n    console.error('There is a error in search movies details of', error);\n    throw error;\n  }\n}\n\n// API function for movie trendings\n\nexport async function getTrending() {\n  try {\n    const API_URL = `trending/movie/day?api_key=${API_KEY}`;\n    const response = await axios.get(API_URL);\n    return response.data;\n  } catch (error) {\n    console.error('There is a error in searching trendings of', error);\n    throw error;\n  }\n}\n\n// API function for movie reviews\n\nexport async function getReviews(id) {\n  try {\n    const API_URL = `movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`;\n    const response = await axios.get(API_URL);\n    return response.data;\n  } catch (error) {\n    console.error('There is a error in searching reviews of', error);\n    throw error;\n  }\n}\n\n// API function for movie credits\n\nexport async function getMovieCredits(id) {\n  try {\n    const API_URL = `movie/${id}/credits?api_key=${API_KEY}&language=en-US`;\n    const response = await axios.get(API_URL);\n    return response.data;\n  } catch (error) {\n    console.error('There is a error in searching credits of', error);\n    throw error;\n  }\n}\n","import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  list-style: none;\n`;\nexport const CastItem = styled.li`\n  margin: 10px 0 16px;\n  padding: 2px 8px;\n  //box-shadow: 1px 2px 4px 3px rgba(0, 0, 0, 0.5);\n`;\nexport const Name = styled.h3`\n  margin: 8px 0;\n`;\nexport const Character = styled.p`\n  margin: 0;\n`;\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getMovieCredits } from '../../API_links/Api';\nimport { CastList, CastItem, Name, Character } from './Cast.styled';\n\nconst Cast = () => {\n  const [credits, setCredits] = useState([]);\n  const { movieIdParam } = useParams();\n  useEffect(() => {\n    getMovieCredits(movieIdParam).then(data => setCredits(data.credits));\n  }, [movieIdParam]);\n\n  return (\n    <CastList>\n      {credits.length > 0\n        ? credits.map(({ id, name, profile_path, character }) => (\n            <CastItem key={id}>\n              <img\n                src={\n                  profile_path\n                    ? `https://image.tmdb.org/t/p/w200${profile_path}`\n                    : `http://www.suryalaya.org/images/no_image.jpg`\n                }\n                alt=\"actor\"\n                loading=\"lazy\"\n                width={120}\n                height={180}\n              />\n              <Name>{name}</Name>\n              <Character> Character: {character}</Character>\n            </CastItem>\n          ))\n        : \"Sorry, there isn't any info :(\"}\n    </CastList>\n  );\n};\n\nexport default Cast;\n"],"names":["API_KEY","searchMovies","query","API_URL","axios","response","data","console","error","getMovieDetails","id","getTrending","getReviews","getMovieCredits","CastList","styled","CastItem","Name","Character","useState","credits","setCredits","movieIdParam","useParams","useEffect","then","length","map","name","profile_path","character","src","alt","loading","width","height"],"sourceRoot":""}