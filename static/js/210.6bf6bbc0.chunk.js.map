{"version":3,"file":"static/js/210.6bf6bbc0.chunk.js","mappings":"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","sources":["API_links/Api.js","Pages/Home/Home.styled.js","components/Styles/Element.styled.js","components/SearchBar/SearchForm.jsx","components/SearchBar/SearchInput.jsx","components/SearchBar/SearchBar.jsx","Pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\nconst API_KEY = '6761a75cfe3ce8a6cf2b591c7da9567e';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\n// API function for searching movies\n\nexport async function searchMovies(query) {\n  try {\n    const API_URL = `search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`;\n    const response = await axios.get(API_URL);\n    return response.data;\n  } catch (error) {\n    console.error('There is a error in search movies of', error);\n    throw error;\n  }\n}\n\n// API function for movie details\n\nexport async function getMovieDetails(id) {\n  try {\n    const API_URL = `movie/${id}?api_key=${API_KEY}&language=en-US`;\n    const response = await axios.get(API_URL);\n    return response.data;\n  } catch (error) {\n    console.error('There is a error in search movies details of', error);\n    throw error;\n  }\n}\n\n// API function for movie trendings\n\nexport async function getTrending() {\n  try {\n    const API_URL = `trending/movie/day?api_key=${API_KEY}`;\n    const response = await axios.get(API_URL);\n    return response.data;\n  } catch (error) {\n    console.error('There is a error in searching trendings of', error);\n    throw error;\n  }\n}\n\n// API function for movie reviews\n\nexport async function getReviews(id) {\n  try {\n    const API_URL = `movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`;\n    const response = await axios.get(API_URL);\n    return response.data;\n  } catch (error) {\n    console.error('There is a error in searching reviews of', error);\n    throw error;\n  }\n}\n\n// API function for movie credits\n\nexport async function getMovieCredits(id) {\n  try {\n    const API_URL = `movie/${id}/credits?api_key=${API_KEY}&language=en-US`;\n    const response = await axios.get(API_URL);\n    return response.data;\n  } catch (error) {\n    console.error('There is a error in searching reviews of', error);\n    throw error;\n  }\n}\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const MovieLink = styled(Link)`\n  text-decoration: none;\n  padding: 5px 8px;\n\n  &:visited {\n    color: blue;\n  }\n\n  &:hover {\n    border-radius: 15px;\n    box-shadow: 1px 2px 4px 3px rgba(231, 233, 255, 5);\n    background-color: rgb(31, 133, 255);\n    color: white;\n    font-weight: bold;\n  }\n`;\nexport const MovieList = styled.ul`\n  padding: 20px 0 20px;\n  margin: 0;\n  display: flex;\n  flex-direction: column;\n  row-gap: 15px;\n  list-style-type: lower-numerical;\n  list-style-color:\n  text-decoration: none;\n`;\n\nexport const Title = styled.h2`\n  margin-top: 20px;\n  margin-bottom: 0;\n`;\n","import styled from 'styled-components';\n\nconst SearchBox = styled.div``;\n\nconst Form = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  height: 30px;\n  max-width: 800px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n  margin-top: 8px;\n`;\n\nconst Input = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 16px;\n  // border: none;\n  // outline: none;\n  padding: 4px;\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n\nconst ButtonIcon = styled.button`\n  display: flex;\n  align-items: center;\n  background-color: inherit;\n  width: 30px;\n  height: 30px;\n  border: 0;\n  margin-right: 4px;\n  margin-left: 4px;\n  cursor: pointer;\n  outline: none;\n`;\n\nconst Button = styled.button`\n  padding: 8px 16px;\n  margin-top: ${p => p.theme.space[4]}px;\n  border: none;\n  border-radius: 15px;\n  background-color: #3f51b5;\n  color: white;\n  text-decoration: none;\n  font-family: inherit;\n  font-size: 16px;\n  line-height: 24px;\n  font-style: normal;\n  font-weight: 500;\n  min-width: 180px;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n\n  cursor: pointer;\n  transition: background-color 250ms linear;\n  &:hover {\n    background-color: #303f9f;\n  }\n`;\n\nexport { SearchBox, Form, ButtonIcon, Input, Button };\n","import PropTypes from 'prop-types';\nimport { Form } from './../Styles/Element.styled';\n\nconst SearchForm = ({ onSubmit, children }) => (\n  <Form onSubmit={onSubmit}>{children}</Form>\n);\n\nexport default SearchForm;\n\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { Input } from 'components/Styles/Element.styled';\n\nconst SearchInput = () => (\n  <Input\n    type=\"text\"\n    name=\"movieName\"\n    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n    title=\"May contain only letters, apostrophe, dash and spaces. For example moon\"\n    required\n    autoComplete=\"off\"\n    autoFocus\n    placeholder=\"Search movie...\"\n  />\n);\n\nexport default SearchInput;\n","import { ButtonIcon, SearchBox } from '../Styles/Element.styled';\nimport { BsSearchHeart } from 'react-icons/bs';\nimport SearchForm from './SearchForm';\nimport SearchInput from './SearchInput.jsx';\nimport PropTypes from 'prop-types';\n\nexport const SearchBar = ({ onSubmit }) => (\n  <SearchBox>\n    <SearchForm onSubmit={onSubmit}>\n      <SearchInput />\n      <ButtonIcon type=\"submit\" aria-label=\"search button\">\n        <BsSearchHeart />\n      </ButtonIcon>\n    </SearchForm>\n  </SearchBox>\n);\nSearchBar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { searchMovies } from '../../API_links/Api';\nimport Loader from '../../components/Loader/Loader';\nimport { MovieList, MovieLink } from '../../Pages/Home/Home.styled';\nimport { SearchBar } from '../../components/SearchBar/SearchBar';\n\nfunction Movies() {\n  const [searchParams] = useSearchParams();\n  const movieName = searchParams.get('movieName') ?? '';\n  const [moviesList, setMoviesList] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    if (movieName === '') {\n      return;\n    }\n    setMoviesList([]);\n    setIsLoading(true);\n\n    searchMovies(movieName)\n      .then(data => {\n        if (!data.results.length) {\n          setIsLoading(false);\n          setError(true);\n          console.log(\n            'There are no movies with this request. Please try again'\n          );\n        } else {\n          setError(false);\n          setMoviesList(data.results);\n          setIsLoading(false);\n        }\n      })\n      .catch(error => {\n        setIsLoading(false);\n        setError(true);\n        console.error('An error occurred while fetching movies:', error);\n      });\n  }, [movieName]);\n\n  return (\n    <div>\n      <SearchBar />\n      {isLoading ? (\n        <Loader />\n      ) : error ? (\n        <p>There was an error loading the movies.</p>\n      ) : (\n        <MovieList>\n          {moviesList.map(movie => (\n            <MovieLink key={movie.id} to={`/movie/${movie.id}`}>\n              {movie.title}\n            </MovieLink>\n          ))}\n        </MovieList>\n      )}\n    </div>\n  );\n}\n\nexport default Movies;\n"],"names":["API_KEY","searchMovies","query","API_URL","axios","response","data","console","error","getMovieDetails","id","getTrending","getReviews","MovieLink","styled","Link","MovieList","Title","SearchBox","Form","Input","ButtonIcon","p","theme","space","onSubmit","children","type","name","pattern","title","required","autoComplete","autoFocus","placeholder","SearchBar","useSearchParams","movieName","get","useState","moviesList","setMoviesList","isLoading","setIsLoading","setError","useEffect","then","results","length","log","catch","Loader","map","movie","to"],"sourceRoot":""}